return {
    Changes = require(script:WaitForChild("Changes"));
    Clone = require(script:WaitForChild("Clone"));
    CloneDeep = require(script:WaitForChild("CloneDeep"));
    Count = require(script:WaitForChild("Count"));
    CreatePatchDeep = require(script:WaitForChild("CreatePatchDeep"));
    Creations = require(script:WaitForChild("Creations"));
    Equals = require(script:WaitForChild("Equals"));
    Filter = require(script:WaitForChild("Filter"));
    Flatten = require(script:WaitForChild("Flatten"));
    FromKeyValueArray = require(script:WaitForChild("FromKeyValueArray"));
    GroupBy = require(script:WaitForChild("GroupBy"));
    InverseKeysValues = require(script:WaitForChild("InverseKeysValues"));
    IsMap = require(script:WaitForChild("IsMap"));
    IsMixed = require(script:WaitForChild("IsMixed"));
    IsPureMap = require(script:WaitForChild("IsPureMap"));
    Keys = require(script:WaitForChild("Keys"));
    Lockdown = require(script:WaitForChild("Lockdown"));
    Map = require(script:WaitForChild("Map"));
    Merge = require(script:WaitForChild("Merge"));
    MergeDeep = require(script:WaitForChild("MergeDeep"));
    MergeMany = require(script:WaitForChild("MergeMany"));
    MutableMerge = require(script:WaitForChild("MutableMerge"));
    MutableMergeDeep = require(script:WaitForChild("MutableMergeDeep"));
    MutableMergeMany = require(script:WaitForChild("MutableMergeMany"));
    Removals = require(script:WaitForChild("Removals"));
    SetUnresizable = require(script:WaitForChild("SetUnresizable"));
    ToKeyValueArray = require(script:WaitForChild("ToKeyValueArray"));
    Values = require(script:WaitForChild("Values"));
};